package GUI.Gestor;

import GUI.Gestor.Paciente.MenuDePaciente;
import clases.Conexion;
import clases.Gestor;
import clases.Paciente;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author bm0275
 */
public class GestionarPacientes extends javax.swing.JPanel {

	/**
	 * Creates new form GestionarPacientes
	 */
	private Gestor gestor;
	private Paciente paciente;
	private mostrarPacientes mostrarPacientes;
	private MenuDePaciente menuDePaciente;
	private Conexion conexion;

	public GestionarPacientes(Gestor gestor) {
		initComponents();
		this.gestor = gestor;
		this.mostrarPacientes = new mostrarPacientes(gestor);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuOpciones = new javax.swing.JPanel();
        buttonMostrarPacientes = new javax.swing.JButton();
        buttonCogerPaciente = new javax.swing.JButton();
        fieldDNI = new javax.swing.JTextField();
        pacienteOK = new javax.swing.JLabel();
        mostrarDatos = new javax.swing.JPanel();

        menuOpciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));

        buttonMostrarPacientes.setText("Mostrar pacientes");
        buttonMostrarPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMostrarPacientesActionPerformed(evt);
            }
        });

        buttonCogerPaciente.setText("Coger paciente");
        buttonCogerPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCogerPacienteActionPerformed(evt);
            }
        });

        fieldDNI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldDNIKeyReleased(evt);
            }
        });

        pacienteOK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout menuOpcionesLayout = new javax.swing.GroupLayout(menuOpciones);
        menuOpciones.setLayout(menuOpcionesLayout);
        menuOpcionesLayout.setHorizontalGroup(
            menuOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonMostrarPacientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuOpcionesLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(menuOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonCogerPaciente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fieldDNI, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(menuOpcionesLayout.createSequentialGroup()
                        .addComponent(pacienteOK)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        menuOpcionesLayout.setVerticalGroup(
            menuOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buttonMostrarPacientes, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(buttonCogerPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fieldDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pacienteOK)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mostrarDatosLayout = new javax.swing.GroupLayout(mostrarDatos);
        mostrarDatos.setLayout(mostrarDatosLayout);
        mostrarDatosLayout.setHorizontalGroup(
            mostrarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 491, Short.MAX_VALUE)
        );
        mostrarDatosLayout.setVerticalGroup(
            mostrarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(menuOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(mostrarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(menuOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mostrarDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * AÃ±ade un panel y muestra los datos del paciente
	 *
	 * @param evt
	 */
    private void buttonMostrarPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMostrarPacientesActionPerformed
		mostrarPacientes.setSize(mostrarDatos.getWidth(), mostrarDatos.getHeight());
		mostrarPacientes.setLocation(0, 0);

		mostrarDatos.removeAll();
		mostrarDatos.add(mostrarPacientes, BorderLayout.CENTER);
		mostrarDatos.revalidate();
		mostrarDatos.repaint();
    }//GEN-LAST:event_buttonMostrarPacientesActionPerformed

	/**
	 * Coge un paciente que exista en la base de datos y monta menuPaciente
	 *
	 * @param evt
	 */
    private void buttonCogerPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCogerPacienteActionPerformed
		try {
			if (gestor.estaBD(fieldDNI.getText())) {
				gestor.getPaciente(fieldDNI.getText());
				crearMenu();
			}
		} catch (SQLException ex) {
			Logger.getLogger(GestionarPacientes.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_buttonCogerPacienteActionPerformed

	/**
	 * Crea un menu de paciente
	 */
	private void crearMenu() {
		menuDePaciente = new MenuDePaciente(gestor, paciente);

		mostrarDatos.setSize(mostrarDatos.getWidth() + menuOpciones.getWidth(), mostrarDatos.getHeight());
		menuDePaciente.setSize(mostrarDatos.getWidth(), mostrarDatos.getHeight());
		menuDePaciente.setLocation(0, 0);

		mostrarDatos.removeAll();
		menuOpciones.setVisible(false);
		mostrarDatos.add(menuDePaciente, BorderLayout.WEST);
		mostrarDatos.revalidate();
		mostrarDatos.repaint();
	}

	/**
	 * Informa de errores en los campos
	 *
	 * @param evt
	 */
    private void fieldDNIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldDNIKeyReleased
		try {
			if (gestor.estaBD(fieldDNI.getText())) {
				pacienteOK.setForeground(Color.green);
				pacienteOK.setText("OK!!");
			} else {
				pacienteOK.setForeground(Color.red);
				pacienteOK.setText("Paciente erroneo");
			}
		} catch (SQLException ex) {
			Logger.getLogger(GestionarPacientes.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_fieldDNIKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCogerPaciente;
    private javax.swing.JButton buttonMostrarPacientes;
    private javax.swing.JTextField fieldDNI;
    private javax.swing.JPanel menuOpciones;
    private javax.swing.JPanel mostrarDatos;
    private javax.swing.JLabel pacienteOK;
    // End of variables declaration//GEN-END:variables
}
