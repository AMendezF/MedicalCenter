package GUI.Gestor.Medicos;

import clases.Gestor;
import java.awt.Color;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Juan
 */
public class añadirMedico extends javax.swing.JPanel {

	/**
	 * Creates new form añadirMedico
	 */
	private Gestor gestor;
	private final int tiempoMinimoCita = 10;
	private final int tiempoMaximoCita = 25;

	public añadirMedico(Gestor gestor) {
		initComponents();
		this.gestor = gestor;
		this.setBackground(new java.awt.Color(150, 190, 230));
		jPanel1.setBackground(this.getBackground());
		try {
			desplegableEspecialidad.setModel(new DefaultComboBoxModel(gestor.getEspecialidades()));
			desplegableTiempoMinimo.setModel(new DefaultComboBoxModel(tiempoMinimo()));
		} catch (SQLException ex) {
			Logger.getLogger(añadirMedico.class.getName()).log(Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelNColegiado = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelApellidos = new javax.swing.JLabel();
        labelEspecialidad = new javax.swing.JLabel();
        fieldNombre = new javax.swing.JTextField();
        fieldApellidos = new javax.swing.JTextField();
        fieldColegiado = new javax.swing.JTextField();
        labelTiempo = new javax.swing.JLabel();
        labelHorario = new javax.swing.JLabel();
        desplegableEspecialidad = new javax.swing.JComboBox();
        desplegableHorario = new javax.swing.JComboBox();
        desplegableTiempoMinimo = new javax.swing.JComboBox();
        NColegiadoOK = new javax.swing.JLabel();
        nombreOK = new javax.swing.JLabel();
        apellidoOK = new javax.swing.JLabel();
        buttonAñadirMedico = new javax.swing.JButton();
        especialidadOK = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Añadir nuevo medico");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        labelNColegiado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelNColegiado.setText("Numero de colegiado:");

        labelNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelNombre.setText("Nombre:");

        labelApellidos.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelApellidos.setText("Apellidos:");

        labelEspecialidad.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelEspecialidad.setText("Especialidad:");

        fieldNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldNombreKeyReleased(evt);
            }
        });

        fieldApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldApellidosKeyReleased(evt);
            }
        });

        fieldColegiado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                fieldColegiadoKeyReleased(evt);
            }
        });

        labelTiempo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelTiempo.setText("Tiempo mínimo:");

        labelHorario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        labelHorario.setText("Horario:");

        desplegableEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desplegableEspecialidadActionPerformed(evt);
            }
        });

        desplegableHorario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mañana", "Tarde" }));

        NColegiadoOK.setText("OK");

        nombreOK.setText("OK");

        apellidoOK.setText("OK");

        buttonAñadirMedico.setText("Añadir nuevo medico");
        buttonAñadirMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAñadirMedicoActionPerformed(evt);
            }
        });

        especialidadOK.setText("OK");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(desplegableHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(nombreOK)))
                                .addGap(0, 215, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelNColegiado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fieldColegiado, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(NColegiadoOK))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(apellidoOK))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(labelEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(desplegableEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(especialidadOK))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(buttonAñadirMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(labelTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(desplegableTiempoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 225, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(desplegableEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(especialidadOK))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNColegiado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldColegiado, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NColegiadoOK))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nombreOK))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidoOK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(desplegableHorario, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(desplegableTiempoMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonAñadirMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

	/**
	 * Comprueba el valor del nombre al escribir
	 *
	 * @param evt
	 */
    private void fieldNombreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldNombreKeyReleased
		comprobarNombre(fieldNombre.getText());
    }//GEN-LAST:event_fieldNombreKeyReleased

	/**
	 * Comprueba el valor del apellido al escribir
	 *
	 * @param evt
	 */
    private void fieldApellidosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldApellidosKeyReleased
		comprobarApellido(fieldApellidos.getText());
    }//GEN-LAST:event_fieldApellidosKeyReleased

	/**
	 * Comprueba el campo colegiado
	 *
	 * @param text
	 * @return
	 */
	private boolean colegiadoEsCorrecto(String num) throws SQLException {
		boolean resul = false;
		if (!gestor.existeMedico(num) && !estaVacio(num) && gestor.esNumerico(num)) {
			resul = true;
		}
		return resul;
	}

	/**
	 * Construye un desplegable con los tiempos minimos de cita
	 *
	 * @return
	 */
	private String[] tiempoMinimo() {
		String[] resultado = new String[tiempoMaximoCita - tiempoMinimoCita + 1];

		for (int i = tiempoMinimoCita; i <= tiempoMaximoCita; i++) {
			resultado[i - tiempoMinimoCita] = Integer.toString(i);
		}
		return resultado;
	}

	/**
	 * Comprueba el valor de colegiado al escribir
	 *
	 * @param evt
	 */
    private void fieldColegiadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fieldColegiadoKeyReleased
		try {
			if (colegiadoEsCorrecto(fieldColegiado.getText())) {
				NColegiadoOK.setForeground(Color.black);
				NColegiadoOK.setText("Correcto");
			} else {
				NColegiadoOK.setForeground(Color.red);
				NColegiadoOK.setText("Incorrecto");
			}
		} catch (SQLException ex) {
			Logger.getLogger(añadirMedico.class.getName()).log(Level.SEVERE, null, ex);
		}
    }//GEN-LAST:event_fieldColegiadoKeyReleased

	/**
	 * Comprueba el añadir medico
	 *
	 * @return
	 */
	private boolean todoCorrecto(String[] medico) throws SQLException {
		boolean resul = false;

		if (!estaEspecialidadLlena(medico[5])) {
			if (colegiadoEsCorrecto(medico[0])) {
				if (comprobarNombre(medico[1])) {
					if (comprobarApellido(medico[2])) {
						resul = true;
					} else {
						JOptionPane.showMessageDialog(this, "Apellido incorrecto!!\nNo debe contener caracteres numericos ni estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this, "Nombre incorrecto!!\nNo debe contener caracteres numericos ni estar vacio", "Error", JOptionPane.ERROR_MESSAGE);
				}
			} else {
				JOptionPane.showMessageDialog(this, "Numero de colegiado no valido!!\nO no es numerico o ya esta en uso", "Error", JOptionPane.ERROR_MESSAGE);
			}
		} else {
			JOptionPane.showMessageDialog(this, "Especialidad llena!!\nElija otra especialidad o borre un medico", "Error", JOptionPane.ERROR_MESSAGE);
		}
		return resul;
	}

    private void buttonAñadirMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAñadirMedicoActionPerformed
		Object[] options = {"Si", "No"};
		int confirmar;

		String[] medico = {fieldColegiado.getText(), fieldNombre.getText(), fieldApellidos.getText(),
			(String) desplegableHorario.getSelectedItem(), (String) desplegableTiempoMinimo.getSelectedItem(),
			(String) desplegableEspecialidad.getSelectedItem()};
		try {
			if (todoCorrecto(medico)) {
				confirmar = JOptionPane.showOptionDialog(this, "Se va ha crear el medico ¿desea confirmar la operacion?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
				if (confirmar == 0) {
					if (gestor.addMedico(medico)) {
						JOptionPane.showMessageDialog(this, "Se ha añadido el medico con codigo " + fieldColegiado.getText());
					} else {
						JOptionPane.showMessageDialog(this, "No se ha podido añadir", "Error", JOptionPane.ERROR_MESSAGE);
					}
				}
			}
		} catch (SQLException ex) {
			JOptionPane.showMessageDialog(this, "No se ha podido añadir" + ex, "Error", JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_buttonAñadirMedicoActionPerformed

	/**
	 * Comprueba la especialidad al elegir
	 *
	 * @param evt
	 */
    private void desplegableEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desplegableEspecialidadActionPerformed
		mostrarErrorEspecialidad((String) desplegableEspecialidad.getSelectedItem());
    }//GEN-LAST:event_desplegableEspecialidadActionPerformed

	/**
	 * Si la especialidad esta llena muestra error por pantalla
	 *
	 * @param especialidad
	 */
	private void mostrarErrorEspecialidad(String especialidad) {
		if (estaEspecialidadLlena(especialidad)) {
			especialidadOK.setForeground(Color.red);
			especialidadOK.setText("Especialidad llena!!");
		} else {
			especialidadOK.setForeground(Color.green);
			especialidadOK.setText("OK!!");
		}
	}

	/**
	 * Comprueba el numero maximo de medicos de la especialidad elegida Devuelve
	 * true si esta llena De lo contrario false
	 *
	 * @param especialidad
	 * @return
	 */
	private boolean estaEspecialidadLlena(String especialidad) {
		boolean resul = false;
		try {
			if (gestor.isEspecialidadMaxMedicos(especialidad)) {
				resul = true;
			}
		} catch (SQLException ex) {
			Logger.getLogger(añadirMedico.class.getName()).log(Level.SEVERE, null, ex);
		}

		return resul;
	}

	/**
	 * Comprueba si el valor apellido es correcto
	 *
	 * @param campo
	 * @return
	 */
	private boolean comprobarApellido(String apellido) {
		boolean resul = false;
		if (estaVacio(apellido)) {
			apellidoOK.setForeground(Color.red);
			apellidoOK.setText("Vacio!!");
		} else if (!gestor.esTexto(apellido)) {
			apellidoOK.setForeground(Color.red);
			apellidoOK.setText("Incorrecto!!");
		} else {
			apellidoOK.setForeground(Color.green);
			apellidoOK.setText("OK!!");
			resul = true;
		}
		return resul;
	}

	/**
	 * Comprueba si el valor apellido es correcto
	 *
	 * @param campo
	 * @return
	 */
	private boolean comprobarNombre(String nombre) {
		boolean resul = false;
		if (estaVacio(nombre)) {
			nombreOK.setForeground(Color.red);
			nombreOK.setText("Vacio!!");
		} else if (!gestor.esTexto(nombre)) {
			nombreOK.setForeground(Color.red);
			nombreOK.setText("Incorrecto!!");
		} else {
			nombreOK.setForeground(Color.green);
			nombreOK.setText("OK!!");
			resul = true;
		}
		return resul;
	}

	/**
	 * Devuelve true si un stirng esta vacio Funcion equals muy simple, pero
	 * ayuda a que el codigo sea mas sencillo y se vea mejor
	 *
	 * @param texto
	 * @return
	 */
	private boolean estaVacio(String texto) {
		boolean resul = false;
		if (texto.equals("")) {
			resul = true;
		}
		return resul;
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel NColegiadoOK;
    private javax.swing.JLabel apellidoOK;
    private javax.swing.JButton buttonAñadirMedico;
    private javax.swing.JComboBox desplegableEspecialidad;
    private javax.swing.JComboBox desplegableHorario;
    private javax.swing.JComboBox desplegableTiempoMinimo;
    private javax.swing.JLabel especialidadOK;
    private javax.swing.JTextField fieldApellidos;
    private javax.swing.JTextField fieldColegiado;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelApellidos;
    private javax.swing.JLabel labelEspecialidad;
    private javax.swing.JLabel labelHorario;
    private javax.swing.JLabel labelNColegiado;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelTiempo;
    private javax.swing.JLabel nombreOK;
    // End of variables declaration//GEN-END:variables

}
